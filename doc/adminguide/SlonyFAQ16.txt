%META:TOPICINFO{author="guest" date="1098327540" format="1.0" version="1.1"}%
%META:TOPICPARENT{name="SlonyFAQ"}%
---++ I pointed a subscribing node to a different parent and it stopped replicating

We noticed this happening when we wanted to re-initialize a node,
where we had configuration thus:

	* Node 1 - master
	* Node 2 - child of node 1 - the node we're reinitializing
	* Node 3 - child of node 3 - node that should keep replicating

The subscription for node 3 was changed to have node 1 as provider,
and we did DROP SET/SUBSCRIBE SET for node 2 to get it repopulating.

Unfortunately, replication suddenly stopped to node 3.

The problem was that there was not a suitable set of "listener paths"
in sl_listen to allow the events from node 1 to propagate to node 3.
The events were going through node 2, and blocking behind the
SUBSCRIBE SET event that node 2 was working on.

The following slonik script dropped out the listen paths where node 3
had to go through node 2, and added in direct listens between nodes 1
and 3.

<verbatim>
cluster name = oxrslive;
 node 1 admin conninfo='host=32.85.68.220 dbname=oxrslive user=postgres port=5432';
 node 2 admin conninfo='host=32.85.68.216 dbname=oxrslive user=postgres port=5432';
 node 3 admin conninfo='host=32.85.68.244 dbname=oxrslive user=postgres port=5432';
 node 4 admin conninfo='host=10.28.103.132 dbname=oxrslive user=postgres port=5432';
try {
		store listen (origin = 1, receiver = 3, provider = 1);
		store listen (origin = 3, receiver = 1, provider = 3);
		drop listen (origin = 1, receiver = 3, provider = 2);
		drop listen (origin = 3, receiver = 1, provider = 2);
}
</verbatim>
Immediately after this script was run, SYNC events started propagating
again to node 3.

This points out two principles:

	*  If you have multiple nodes, and cascaded subscribers, you need to		be quite careful in populating the STORE LISTEN entries, and in
	  modifying them if the structure of the replication "tree" changes.

	*  Version 1.1 probably ought to provide better tools to help manage		this.

The issues of "listener paths" are discussed further at SlonyListenPaths

