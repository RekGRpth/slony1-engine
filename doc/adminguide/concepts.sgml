<sect1 id="concepts"> <title>Slony-I Concepts</title>


<para>In order to set up a set of Slony-I replicas, it is necessary to understand the following major abstractions that it uses:

<itemizedlist>
	<listitem><para> Cluster
	<listitem><para> Node
	<listitem><para> Replication Set
	<listitem><para> Provider and Subscriber
</itemizedlist>

<sect2><title>Cluster</title>

<para>In Slony-I terms, a Cluster is a named set of PostgreSQL database instances; replication takes place between those databases.

<para>The cluster name is specified in each and every Slonik script via the directive:
<programlisting>
cluster name = 'something';
</programlisting>

<para>If the Cluster name is <envar/something/, then Slony-I will
create, in each database instance in the cluster, the namespace/schema
<envar/_something/.

<sect2><title> Node</title>

<para>A Slony-I Node is a named PostgreSQL database that will be participating in replication.  

<para>It is defined, near the beginning of each Slonik script, using the directive:
<programlisting>
 NODE 1 ADMIN CONNINFO = 'dbname=testdb host=server1 user=slony';
</programlisting>

<para>The CONNINFO information indicates a string argument that will ultimately be passed to the <function>PQconnectdb()</function> libpq function. 

<para>Thus, a Slony-I cluster consists of:
<itemizedlist>
	<listitem><para> A cluster name
	<listitem><para> A set of Slony-I nodes, each of which has a namespace based on that cluster name
</itemizedlist>

<sect2><title> Replication Set</title>

<para>A replication set is defined as a set of tables and sequences
that are to be replicated between nodes in a Slony-I cluster.

<para>You may have several sets, and the <quote/flow/ of replication does
not need to be identical between those sets.

<sect2><title> Provider and Subscriber</title>

<para>Each replication set has some <quote>master</quote> node, which
winds up being the <emphasis>only</emphasis> place where user
applications are permitted to modify data in the tables that are being
replicated.  That <quote>master</quote> may be considered the
originating <quote>provider node;</quote> it is the main place from
which data is provided.

<para>Other nodes in the cluster will subscribe to the replication
set, indicating that they want to receive the data.

<para>The "master" node will never be considered a "subscriber."  But
Slony-I supports the notion of cascaded subscriptions, that is, a node
that is subscribed to the "master" may also behave as a "provider" to
other nodes in the cluster.

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode:sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"./reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:("/usr/lib/sgml/catalog")
sgml-local-ecat-files:nil
End:
-->
