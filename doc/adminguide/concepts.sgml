<article id="concepts"> <title/Slony-I Concepts/


<para>In order to set up a set of Slony-I replicas, it is necessary to understand the following major abstractions that it uses:

<itemizedlist>
	<listitem><Para> Cluster
	<listitem><Para> Node
	<listitem><Para> Replication Set
	<listitem><Para> Provider and Subscriber
</itemizedlist>

<sect1><title/Cluster/

<para>In Slony-I terms, a Cluster is a named set of PostgreSQL database instances; replication takes place between those databases.

<para>The cluster name is specified in each and every Slonik script via the directive:
<command>
cluster name = 'something';
</command>

<para>If the Cluster name is 'something', then Slony-I will create, in each database instance in the cluster, the namespace/schema '_something'.

<sect1><title/ Node/

<para>A Slony-I Node is a named PostgreSQL database that will be participating in replication.  

<para>It is defined, near the beginning of each Slonik script, using the directive:
<command>
 NODE 1 ADMIN CONNINFO = 'dbname=testdb host=server1 user=slony';
</command>

<para>The CONNINFO information indicates a string argument that will ultimately be passed to the <function/PQconnectdb()/ libpq function. 

<para>Thus, a Slony-I cluster consists of:
<itemizedlist>
	<listitem><para> A cluster name
	<listitem><Para> A set of Slony-I nodes, each of which has a namespace based on that cluster name
</itemizedlist>

<sect1><title/ Replication Set/

<para>A replication set is defined as a set of tables and sequences that are to be replicated between nodes in a Slony-I cluster.

<para>You may have several sets, and the "flow" of replication does not need to be identical between those sets.

<sect1><title/ Provider and Subscriber/

<para>Each replication set has some "master" node, which winds up
being the <emphasis/only/ place where user applications are permitted
to modify data in the tables that are being replicated.  That "master"
may be considered the master "provider node;" it is the main place
from which data is provided.

<para>Other nodes in the cluster will subscribe to the replication
set, indicating that they want to receive the data.

<para>The "master" node will never be considered a "subscriber."  But
Slony-I supports the notion of cascaded subscriptions, that is, a node
that is subscribed to the "master" may also behave as a "provider" to
other nodes in the cluster.

</article>
<!-- Keep this comment at the end of the file
Local variables:
mode:sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"./reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:("/usr/lib/sgml/catalog")
sgml-local-ecat-files:nil
End:
-->
