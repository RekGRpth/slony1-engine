<!--  -->
<sect1 id="security">
<title>Security Considerations</title>

<para>
The simplest and most common way of deploying &slony1; is to create a
son database user account on all nodes in the system and give that
account database superuser privileges.  This allows &slony1; to do 
anything it needs.
</para>

<sect2>
<title>Minimum Privileges</title>

<para>
The minimum privileges for running each component of &slony1; are:
<sect3><title>Slonik</title>
<para>
The slonik admin connections need to connect to the database as a database
superuser.  As part of the installation of &slony1;, the slonik program will
create C language functions in the database.  This requires superuser
access.  Some slonik commands will enable and disable indicies which by
manipulating pg_class.  This also requires superuser access.
</para>

</sect3>
<sect3> <title>Slon Local Connection</title>
<para>
Each slon instance has a 'local' database connection.  This is the database
connection that is specified on the either the slon command line or the
slon configuration file.  Slon needs to connect to this database as a 
superuser.  In particular slon needs to have sufficient permissions to:
<itemizedlist>
<listitem><para>Alter pg_class when preparing to COPY a table</para></listitem>
<listitem><para>Made changes to any of the &slony1; created tables
</para></listitem>
<listitem><para>Make modifications to any replicated tables.</para>
</listitem>
</itemizedlist>

</para>

</sect3>
<sect3>
<title>Slon Remote Connections</title>
<para>
The Remote slon connection information is specified in the 
<xref linkend="stmtstorepath"> command when adding paths.  The slon
daemon needs to connect to remote databases with sufficient permissions 
to:
<itemizedlist>
<listitem><para>Read (query) the sl_event tables</para>
<listitem><para> Read (query) the sl_log_1 and sl_log_2 tables</para></listitem>
<listitem><para> Read (query) any replicated tables that originate on the
remote  node.  This is done as part of the initial COPY during the 
subscription process</para></listitem>
</itemizedlist>

<sect2 id="superuser">
<title> Lowering Authority Usage </title>

<para> Traditionally, it has been stated that <quote>&slony1; needs to
use superuser connections.</quote>  It turns out that this is not
actually true, and and if there are particular concerns about
excessive use of superuser accounts, it is possible to reduce this
considerably. </para>

<para> It is <emphasis>simplest</emphasis> to have the replication
management user be a superuser, as, in that case, one need not think
about what permissions to configure.</para>

<para> There is only actually one place where &slony1; requires
superuser access, and that is during the subscription process, as it
uses a <quote>hack</quote> to substantially improve performance,
updating the system catalogue directly to shut off indices during the
<command>COPY</command>.  This functionality is restricted to two
functions, as of version 2.1, with
<function>disable_indexes_on_table()</function> and
<function>enable_indexes_on_table()</function>, which may appropriate
superuser permissions if configured with <command>SECURITY
DEFINER</command>.  If these functions are owned by a superuser, then
that is all the database superuser access that is required. </para>

<para> One could set up a <quote>weak user</quote> assigned to all
<xref linkend="stmtstorepath"> requests.  The minimal permissions that
this user, let's call it <command>weakuser</command>, requires are as
follows:</para>

<itemizedlist>

<listitem><para> It must have read access to the &slony1;-specific
namespace </para> </listitem>

<listitem><para> It must have read access to all tables and sequences
in that namespace</para> </listitem>

<listitem><para> It must have write access to the &slony1; table
<envar>sl_nodelock</envar> and sequence
<envar>sl_nodelock_nl_conncnt_seq</envar> </para> </listitem>

<listitem><para> At subscribe time, it must have read access to all of
the replicated tables. </para>

<para> Outside of subscription time, there is no need for access to
access to the replicated tables. </para> </listitem>

<listitem><para> There is some need for read access to tables in
pg_catalog; it has not been verified how little access would be
suitable. </para> </listitem>

<listitem><para> As mentioned, the functions for disabling and
re-enabling indexes during the subscription process must be owned by a
superuser, and must be accessible to the <quote>weak user.</quote>
</para></listitem>

</itemizedlist>


</sect2>

</sect1>
