<refentry id="slon">
<refmeta>
    <refentrytitle id="app-slon-title"><application>slon</application></refentrytitle>
    <manvolnum>1</manvolnum>
    <refmiscinfo>Application</refmiscinfo>
  </refmeta>

  <refnamediv>
    <refname><application>slon</application></refname>
    <refpurpose>
      <productname>Slony-I</productname> daemon
    </refpurpose>
  </refnamediv>

 <indexterm zone="slon">
  <primary>slon</primary>
 </indexterm>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>slon</command>
   <arg rep="repeat"><replaceable class="parameter">option</replaceable></arg>
   <arg><replaceable class="parameter">clustername</replaceable>
   <arg><replaceable class="parameter">conninfo</replaceable></arg></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

    <para>
     <application>slon</application> is the daemon application that
     <quote>runs</quote> <productname>Slony-I</productname>
     replication.  A <application>slon</application> instance must be
     run for each node in a <productname>Slony-I</productname>
     cluster.
    </para>
 </refsect1>

 <refsect1 id="R1-APP-SLON-3">
  <title>Options</title>

  <variablelist>
    <varlistentry>
      <term><option>-d <replaceable class="parameter">debuglevel</replaceable></></term>
      <listitem>
      <para>
      Specifies the level of verbosity that <application>slon</application> should
      use when logging its activity.
      </para>
     <para>The eight levels of logging are:
      <itemizedlist>
       <listitem><Para>Error
       <listitem><Para>Warn
       <listitem><Para>Config
       <listitem><Para>Info
       <listitem><Para>Debug1
       <listitem><Para>Debug2
       <listitem><Para>Debug3
       <listitem><Para>Debug4
      </itemizedlist>
    </listitem>
    </varlistentry>

    <varlistentry>
    <term><option>-s <replaceable class="parameter">SYNC check interval</replaceable></></term>
    <listitem>
     <para>
      Specifies the interval, in milliseconds, in which
      <application/slon/ should add a SYNC even if none has been
      mandated by data creation.  Default is 10000 ms.
     </para>
     
     <para>Short sync times keep the master on a <quote/short leash,/
      updating the slaves more frequently.  If you have replicated
      sequences that are frequently updated <emphasis/without/ there
      being tables that are affected, this keeps there from being times
      when only sequences are updated, and therefore <emphasis/no/
      syncs take place.
    </listitem>
   </varlistentry>

    <varlistentry>
      <term><option>-t <replaceable class="parameter">SYNC interval timeout</replaceable></></term>
      <listitem>
      <para>
      Default is 60000 ms.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
    <term><option>-g <replaceable class="parameter">group size</replaceable></></term>
    <listitem>
     <para>
      Maximum SYNC group size; defaults to 6.  Thus, if a particular
      node is behind by 200 SYNCs, it will try to group them together
      into groups of 6.  This would be expected to reduce transaction
      overhead due to having fewer transactions to <command>COMMIT</command>.
     </para>
     
     <para>The default of 6 is probably suitable for small systems
      that can devote only very limited bits of memory to slon.  If you
      have plenty of memory, it would be reasonable to increase this,
      as it will increase the amount of work done in each transaction,
      and will allow a subscriber that is behind by a lot to catch up
      more quickly.</para>
     
     <para>Slon processes usually stay pretty small; even with large
      value for this option, slon would be expected to only grow to a
      few MB in size.</para>
     
    </listitem>
   </varlistentry>

    <varlistentry>
    <term><option>-c <replaceable class="parameter">cleanup cycles</replaceable></></term>
    <listitem>
     <para>
      How often to <command>VACUUM</command> in cleanup cycles.
     </para>
     
     <para>Set this to zero to disable slon-initiated vacuuming.  If
      you are using something like
      <application>pg_autovacuum</application> to initiate vacuums, you
      may not need for slon to initiate vacuums itself.  If you are
      not, there are some tables Slony-I uses that collect a
      <emphasis>lot</emphasis> of dead tuples that should be vacuumed
      frequently.</para>

    </listitem>
   </varlistentry>
   
    <varlistentry>
      <term><option>-p <replaceable class="parameter">PID filename</replaceable></></term>
      <listitem>
      <para>
      PID filename.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-f <replaceable class="parameter">config file</replaceable></></term>
      <listitem><para>
      File containing <application>slon</application> configuration.
      </para>
      </listitem>
    </varlistentry>

  </variablelist>
 </refsect1>


 <refsect1>
  <title>Exit Status</title>

  <para>
   <application>slon</application> returns 0 to the shell if it
   finished normally.  It returns -1 if it encounters any fatal error.
  </para>
 </refsect1>
</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:"slony.sgml"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
