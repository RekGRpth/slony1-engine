%META:TOPICINFO{author="guest" date="1099541409" format="1.0" version="1.2"}%
%META:TOPICPARENT{name="SlonyFAQ"}%
---++ I started doing a backup using pg_dump, and suddenly Slony stops

Ouch.  What happens here is a conflict between:

	* pg_dump, which has taken out an AccessShareLock on all of the tables in the database, including the Slony-I ones, and

	* A Slony-I sync event, which wants to grab a AccessExclusiveLock on	 the table sl_event.

The initial query that will be blocked is thus:

<verbatim>
	 select "_slonyschema".createEvent('_slonyschema, 'SYNC', NULL);	  
</verbatim>

(You can see this in pg_stat_activity, if you have query display turned on in postgresql.conf)

The actual query combination that is causing the lock is from the function Slony_I_ClusterStatus(), found in slony1_funcs.c, and is localized in the code that does:

<verbatim>
  LOCK TABLE %s.sl_event;
  INSERT INTO %s.sl_event (...stuff...)
  SELECT currval('%s.sl_event_seq');
</verbatim>

The LOCK statement will sit there and wait until pg_dump (or whatever else has pretty much any kind of access lock on sl_event) completes.  

Every subsequent query submitted that touches sl_event will block behind the createEvent call.

There are a number of possible answers to this:

	* Have pg_dump specify the schema dumped using --schema=whatever,	  and don't try dumping the cluster's schema.

	* It would be nice to add an "--exclude-schema" option to pg_dump to	  exclude the Slony cluster schema.  Maybe in 8.0 or 8.1...

Note that 1.0.5 uses a more precise lock that is less exclusive that  relieves this problem.
