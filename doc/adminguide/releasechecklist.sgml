<!-- $Id: releasechecklist.sgml,v 1.3 2006-10-04 16:27:56 cbbrowne Exp $ -->
<article id="releasechecklist"> <title> Release Checklist </title>

<indexterm><primary>release checklist</primary></indexterm>

<para> Here are things that should be done whenever a release is prepared:</para>
<itemizedlist>

  <listitem><para>Positive build reports for each supported platform -
  although it is arguably less necessary for a comprehensive list if
  we are releasing a minor upgrade

  </para></listitem> 

<listitem><para>Some kind of Standard Test Plan 

  </para></listitem> 
<listitem><para>Binary RPM packages 

  </para></listitem> 
<listitem><para>Tag with the release ID. For version 1.1.2, this would be <envar>REL_1_1_2 </envar>

  </para></listitem> 
<listitem><para>Check out a copy via <command>cvs export -rREL_1_1_2 </command>

  </para></listitem> 

<listitem><para>Run <application>autoconf</application> so as to
regenerate <filename>configure</filename> from
<filename>configure.ac</filename>

  </para></listitem> 
<listitem><para>Purge directory <filename>autom4te.cache</filename> so it is not included in the build  </para></listitem> 
<listitem><para>Purge out .cvsignore files; this can be done with the command <command> find . -name .cvsignore | xargs rm </command>  </para></listitem> 
<listitem><para>Need to make sure that all references to CVS tags properly point to the tag for the release. </para>

<para>For instance, configure should contain, for release 1.1.2:</para>
<itemizedlist>
<listitem><para>PACKAGE_VERSION=REL_1_1_2</para></listitem>

<listitem><para>PACKAGE_STRING=postgresql-slony1-engine REL_1_1_2</para></listitem>
</itemizedlist>

<para> RPM spec files used to contain release tags as well as names of tarballs which needed to be updated. As of 2005-12-13, there is less of this...   For those platforms with specific spec files such as SuSE, some editing still needs to be done. see the file(s) in the <filename>suse</filename> dir for more information </para>

<para> The admin guide <filename>version.sgml</filename> file needs to contain the release name. This should not need to be touched; version.sgml is generated automatically with the release name/tag on demand. </para>

<para> It sure would be nice if more of these could be assigned automatically, somehow.

</para></listitem> 
<listitem><para>commit the new configure 

  </para></listitem> 

<listitem><para>make sure that the generated files from .l and .y are
created, for example <filename>slony/conf-file.[ch]</filename> </para>

<para> Currently this is best done by issuing <command> ./configure &&
make all && make clean</command> but that is a somewhat ugly approach.

</para></listitem> 
<listitem><para>Generate HTML tarball, and RTF/PDF, if possible... Note that the HTML version should include *.html (duh!), *.jpg, *.png, as well as *.css 
  </para></listitem> 

<listitem><para>Run <command>make clean</command> in <filename>doc/adminguide</filename> before generating the tarball in order that <filename>bookindex.sgml</filename> is NOT part of the tarball 

  </para></listitem> 
<listitem><para>Alternatively, delete <filename>doc/adminguide/bookindex.sgml </filename>

  </para></listitem> 
<listitem><para>Rename the directory (e.g <filename>slony1-engine</filename>) to a name based on the release, e.g. - <filename>slony1-1.1.2 </filename>

  </para></listitem> 
<listitem><para>Generate a tarball - <command>tar tfvj slony1-1.1.2.tar.bz2 slony1-1.1.2 </command>

  </para></listitem> 
<listitem><para>Build the administrative documentation, and build a tarball as <filename>slony1-1.1.2-html.tar.bz2</filename></para>
 <para> Make sure that the docs are inside a subdir in the tarball.

</para></listitem> 
<listitem><para>Put these tarballs in a temporary area, and notify everyone (on some mailing list???) that they should test them out ASAP based on the Standard Test Plan. 
</para></listitem></itemizedlist>
</article>
<!-- Keep this comment at the end of the file
Local variables:
mode:sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:"slony.sgml"
sgml-exposed-tags:nil
sgml-local-catalogs:("/usr/lib/sgml/catalog")
sgml-local-ecat-files:nil
End:
-->
