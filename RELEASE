$Id: RELEASE,v 1.3.2.13 2009-07-20 16:47:53 cbbrowne Exp $

RELEASE 2.0.0

The first release of version 2.0. See RELEASE-2.0 to see changes leading
from version 1.2 to 2.0.

RELEASE 2.0.1

- Bug #69 - vactables type was being referenced before UPGRADE FUNCTIONS could actually have created it, when upgrading from an earlier version.

  This would cause UPGRADE FUNCTIONS to fail.

- Bug #64 - use of syslog levels had some inappropriate break statements so that some logging would get lost.

- If you had multiple clusters where one cluster name was a substring of the other, slon-tools.pm could find
  both when looking for slon processes relevant to the shorter cluster name.  Added a space to the relevant
  bit of slon-tools.pm

- Failover had an insert into sl_event where # of columns provided didn't match those expected.  This
  resulted from the change of snapshot handling which used to involve 3 columns where in 8.3+, there is
  now a snapshot type.

- Fix syntax error in tools/altperl/slon_watchdog.pl

- Add cleanup_interval example to sample slon.conf file

- Add cleanup_interval configuration configuration to regression tests

- Add documentation for complex failover scenario

- Revise installation notes to indicate that xxid.so no longer exists in Slony-I 2.0+

- Fix documentation typos

- Fixed error with cleanup code which was not purging old data in sl_log_1/sl_log_2

- Fix altperl/slontools errors

- Added in preliminaries for upgrade from 1.2 to 2.0 - discussion of what the tool
  needs to do

- Bug #63 - Array overrun in logtrigger()

RELEASE 2.0.2

- PostgreSQL 8.4 compatibility - src/backend/slony1_funcs.c needed to
  #include "catalog/pg_type.h"; that is no longer implicitly included by
  the SPI #include

- Fix bug #71 - config dump was failing on string entries that were NULL

- Fix bug #76 - REPAIR CONFIG could have collisions where, when we 
  load a schema, one entry in sl_table already has an OID value
  that incorrectly matches a value that another update is trying to
  fix.

  This would cause REPAIR CONFIG to fail.

  Put in a query that updates the oids in sl_table and sl_sequence to
  randomly selected values from pg_class that couldn't match (since
  the values selected are from non-table/non-sequence objects)

- Updated release notes to indicate that 2.0 only supports PostgreSQL
  8.3+

- Change to configure.ac to allow it to run on autoconf 2.63; there was
  something unsuitable about SLONREL_VERSION processing

- Fixes to Makefile for admin guide

- Various fixes to admin guide material

- Added an extra test to Schema name test that validates that things
  can operate properly even if the DB lacks a "public" schema

- Fixed bug in tools/start_slon.sh

- Fixed pathname substitutions in a couple of altperl scripts

- Add a test which validates that the cluster schema name is valid; 
  pgAdminIII allowed setting up cluster names that slonik would refuse
  to connect to.

- Revised regression tests to use SYNC/WAIT FOR EVENT instead of
  queries that try to coordinate sl_status information with rather
  less determinacy...

- Cleanup thread was generating spurious error messages due to
  misinterpreting PG return codes.  Rectified this, and added a
  test in to make sure we're exercising the logic


RELEASE 2.0.3

- PostgreSQL 8.4 has been released; slonik needs to explicitly recognize it

- Add in slonikconfdump.sh tool, which generates a slonik script to duplicate
  the configuration of a Slony-I cluster

- Significant fixes to documentation to reflect 2.0 changes

- Add "OMIT COPY" option to the Slonik "SUBSCRIBE SET" command

- Document process for Slony-I 2.0 upgrade using OMIT COPY option

- Fix to race condition where file descriptor copies were being made at
  the wrong time in the scheduler

- Modify "testseqnames" regression test to create a whole bunch of
  sequences to validate that things don't break down with either lots of
  them, or where IDs are large numbers

- Change minimum debugging level to -1 to allow suppressing logging

- Bug #92 - compression of event numbers had a bug where events >
  2^31-1 would overflow the "int" value
