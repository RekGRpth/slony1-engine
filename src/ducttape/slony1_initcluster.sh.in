#!@BASH_PATH@
# ----------------------------------------------------------------------
# slony1_initcluster.sh.in
#
#	Shell script to load the base schema and support functions
#	for the primary node of a Slony-I cluster into a database.
#
# $Id: slony1_initcluster.sh.in,v 1.4 2004-03-02 18:07:52 wieck Exp $
# ----------------------------------------------------------------------

# ----
# Get commandline options
# ----
ModeForce=0
Errors=0

while true ; do
	case $1 in
		-f)	ModeForce=1
			shift
			;;

		-*)	echo "unknown option $1" >&2
			shift
			Errors=1
			;;

		*)	break
			;;
	esac
done

# ----
# Check usage
# ----
if [ $# -ne 3 ] ; then
	echo "usage: `basename $0` [options] cluster-name conninfo node-comment" >&2
	exit 1
fi

clustername="$1"
namespace="_$1"
no_comment="$3"
libdir=@LIBDIR@

SLONY1_CLUSTERNAME="$1"
export SLONY1_CLUSTERNAME

# ----
# Special treatment of the cluster .rc file in initcluster.
# We allways want to initialize a new rc file, so if one exists we
# must be called with switch -f.
# ----
CLUSTER_INFO=@LIBDIR@/ducttape_cluster_info-$SLONY1_CLUSTERNAME
if [ -f $CLUSTER_INFO ] ; then
	if [ $ModeForce -eq 0 ] ; then
		echo "ERROR: cluster $SLONY1_CLUSTERNAME already exists" >&2
		echo "(found file $CLUSTER_INFO - use -f to overwrite)"
		exit 2
	fi
	echo "WARNING: overwriting file $CLUSTER_INFO"
fi

# ----
# Source in common functions and override the eventually existing
# ducttape_cluster_info
# ----
. @LIBDIR@/slony1_common.sh

PrimaryNode=1
ConnInfo_1="$2"

# ----
# Determine the postgres version and check if supported
# ----
pgversion=`get_postgres_version 1` || exit 2
case $pgversion in
	7.3|7.3.*)	base_version=7.3
				xfiles=v73
				bfiles=v73
				;;
	7.4|7.4.*)	base_version=7.4
				xfiles=v73
				bfiles=v73
				;;
	7.5|7.5*)	base_version=7.5
				xfiles=v73
				bfiles=v73
				;;
	*)			echo "Unsupported database version $pgversion" >&2
				exit 3
				;;
esac

# ----
# Check that the namespace doesn't exist yet
# ----
conninfo=`get_conninfo_src 1` || exit 2
eval $conninfo
exists=`psql -Aqt -c "select nspname from pg_namespace where nspname = '${namespace}';" $DBNAME`
if [ "x${exists}" = "x${namespace}" ] ; then
	echo "Namespace \"$namespace\" already exists" >&2
	exit 4
fi

echo "PostgreSQL version is $pgversion"
echo "Using database verion specific xfiles $xfiles"
echo "Using database verion specific bfiles $bfiles"
echo "Namespace is \"$namespace\""
echo ""

# ----
# Load the xxid data type, the base schema, functions and
# call the initializeLocalNode() and enableNode() procedures.
# ----
err=1
case $base_version in
	7.3|7.4|7.5)	(
					echo "create schema \"${namespace}\";"

					cat ${libdir}/xxid.$xfiles.sql						\
						${libdir}/slony1_base.sql						\
						${libdir}/slony1_base.$bfiles.sql				\
						${libdir}/slony1_funcs.sql						\
						${libdir}/slony1_funcs.$bfiles.sql				\
						${libdir}/Prototype_log_trigger.sql				\
						| sed -e "s/@CLUSTERNAME@/${clustername}/g"		\
							  -e "s/@NAMESPACE@/\\\"${namespace}\\\"/g"

					echo "select \"${namespace}\".initializeLocalNode(1,'${no_comment}');"
					echo "select \"${namespace}\".enableNode(1);"
				) | psql -e $DBNAME 2>&1 | grep "^ERROR" || err=0
				;;
esac

if [ $err -eq 0 ] ; then
	echo "Cluster $clustername with primary node 1 created"
else
	exit 5
fi

# ----
# Setup a new .slony1.<clustername>.rc file
# ----
echo "# $CLUSTER_INFO"			> $CLUSTER_INFO
echo "# Administrative information for Slony-I cluster $clustername" >>$CLUSTER_INFO
echo "PrimaryNode=1"		>>$CLUSTER_INFO
echo "ConnInfo_1=\"$2\""	>>$CLUSTER_INFO

exit 0
