1.  Modifications to DB Schema

sl_node needs a new boolean field, no_spool

  alter table @NAMESPACE@.sl_node add column no_spool boolean default 'f';

  comment on column @NAMESPACE@.sl_node.no_spool is
    'Value is t if this node is a Log Shipping/Spooling node which does not communicate with other nodes.';

2.  Modifications to stored functions

  Numerous functions that do node-based things need to reject updates on nodes where no_spool = 't':

  - moveset() and moveset_int() cannot move set to a node where no_spool = 't'

  - storepath() and storepath_int() must fail when given a node where
    no_spool = 't'; there is no path to that node

  - storeset() and storeset_int() must reject an origin where no_spool = 't'

  - subscribeset(set,provider,receiver,forward) and subscribeset_int(set,provider,receiver,forward)
    should reject both provider and receiver where no_spool = 't'

  - unsubscribeset() and unsubscribeset_int() rejects where receiver has no_spool = 't'

  Add in function nodespool(node) and nodespool_int(node):

   - These verify that the node hasn't got any subscribers or paths or
     listens, and then modify sl_node.no_spool to 't'.

3. Slonik

  Need an extra boolean option, "spooler", which, if set to 'TRUE'
  causes slonik to call nodespool(node).

4. slon

  Should be pretty oblivious of "log shipping."

5. slon_spool

  This is an alternative to slon, which gets used to generate "log shipper" output

  It's a script/program that is passed information allowing it to
  connect to Slony-I, along with a node number.
